ES6 Getter & Setters

Getters: are used to get properties of an object
Getters are mostly return type methods and they usually do not take arguments unless necessary

Setters: are used to set properties of na object
Setters are mostly void type (not returning) and they mostly take arguments to be set as the new information

Advantages of Getter
-They provide programmer better control mechanism to access information and update information


Class: is a template - blueprint can be used to create many objects
Objects: they are instance of their classes

Class : Person
Object: Suzanne, Ayca, John

Object properties
-if each object has different information for one property like name - this should be non static- Ayca, Suzanne, John
-if a behavior differs for object like sound, walk, run -> non-static(different for each person) - Ayca, Suzanne, John
-every object shares the same info so static property -> belongs to person -> we have 2 eyes
-every object has a feature - static function -> belongs to class -> breathe

Static members belongs to class and can only be access with the class name
Syntax: Class.property or Class.function
-static members cannot be accessed with the objects 

Non-static members belongs to the object and can only be accessed with the objects created
Syntax : const obj = new Class();
    obj.property or obj.function()
- non static members cannot be accessed with the className


