ES6 realease happened in 2015 (ES2015)
-var is replaced with 2 new reservsed keywords let & const


var : used before ES6
let : is an ES6 feature and used for variables that you would like to reassign later
const : is an ES6 feature and used for constants meaning the value of the variable cannot be changed

var-let-const
var is hoisted, let and const are not hoisted

let: mutable
const: immutable

Scope-Closure-Hoisiting
-all are used and telling us information about the accessibility of the information
-{} this is known as a block and usually it hold a few lines of code
    examples: if-else, loops, functions, switche

// Global Scope
var x = 10;
let y = 11;
const z = 10;

// Block Scope
{
    var x = 10;
    let y = 11;
    const z =12;
}

// Function scope 
function funcName() {
    var x = 10;
    let y = 11;
    const z = 12;
}

// Lexical Scope - nested functions
-In case you have nested fucntions;
    The inner function can access the outer function varabiables
    However, the outer function cannot access the inner function variables
-Same rule applies to all var, let, and const variables.


Hositing: is a concept that JS moves variable declarations to the top of the file and allows you to 
access the variable reference but not the value 
Function can also be hoisted unless they are stored in a variable using function expression
or arrow function
-var keyword can only be hoisted but let and const cannot be hoisted 
-functions that are created with regular syntax will be hoisted and can be used anywhere within the file with no issues

IMPORTANT INTERVIEW QUESTION
What is hositing? 
This was a feature used before with the var keyword
let and const cannot be hoisted but var can

What is scope? Tell me the different scopes
What is closure? 